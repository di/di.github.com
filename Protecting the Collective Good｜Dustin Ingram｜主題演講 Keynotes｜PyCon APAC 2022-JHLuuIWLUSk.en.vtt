hello everyone welcome to the first  genocation of python Apex 2022 and the
host and my name is Java our speaker is  Dustin Ingram that is a software
engineer on Google's open source  security team where he works on  improving
the security of Open Source  soft server that's Google and the rest  of the
world relies on he's also a  director of the Python software  Foundation where
he helps ensure the  long-term success of one very big open  source python
project you're probably  heard of python itself as well as the  community
around it is also maintainer  of the Python package index where he  helps
ensure the long-term success of  countries of thousands of tiny python
projects  many of which you you are probably never  heard of but play a
critical role in the  python ecosystem the topic is talking  about is
protecting the collective Goods  without any further delay please work on  our
Kindle speaker that's it  hey everybody uh thank you so much for  having me
here  um like you said I'm Dustin and this  talk is about protecting the
collective  good  um I am a director of the Python  software foundation and
what that means  is I'm on the board of directors of the  psf and the psf is
the organization  behind python the language and many of  the other projects
around Python and our  goal as directors on the sport is to  help guide the
language help make sure  that it continues to exist for a long  time  um like
you said I'm also a maintainer  of the Python package index and I've  been that
for a while as well uh longer  than I've been on the board in fact and  so I
really care a lot about software  security and you know Distributing  python
code for quite a while  and more recently I am I've recently  joined the Google
open source security  team  um like you said the mission of the team  is to
improve the security of Open  Source software that that Google and the  entire
world in fact relies upon so  we're an externally facing team trying  to solve
problems uh in open source  software security and we're working on a  lot of
projects in a lot of different  areas  um I'll be excited to talk to you about
some of those in a little bit  first a disclaimer though  um the opinions that
I'm expressing here  in this talk are solely my own they  don't express the
views or opinions of  my employer any of the projects I work  on my team or of
the Python software  Foundation itself

I want to give a little forward a
little intro to what this talk is about this talk is about protecting the
collective good

we are Builders as developers as  programmers we are really
good at  building things  we have a near infinite amount of tools  and raw
material at our disposal and  usually these tools and raw material  provided to
us for free  I think that sometimes we tend to get  caught up in the building
because  building things is fun and because as  Engineers we are good at it

sometimes I think we don't stop often  enough and ask ourselves  what are we
building  why are we building it what outcome are  we hoping to achieve with
what we build  and maybe what outcome is someone else  hoping to achieve with
what we build

so in this talk I'll explain what I mean  by the collective good
and why I think it needs to be protected  I'll talk a little bit about what
we're  building what our community is building  what my team is building and so
on and a  little bit about why we're building as  well  and why I think it's
really important to  reflect on what we're building  why we're building it but
also how you  as an individual can help

first I want to tell you all a story
and  this is a true story about two very  similar women  who travel to very
different paths

this is your child young she was born in  Munich Germany in
1920.  when she was 15 she joined the blund  Deutsche model the league of
German  girls  she was a dancer and she wanted to be a  ballerina in Berlin but
by 1941 at the  start of the second world war it  prevented her from joining a
dance  school so instead she trained to be a  secretary

this is Sophia stroll
she was born in fortenberg Germany which  is about 300 kilometers from Munich
in  1921.  at the age of 12 like gertrild she also  chose to join the BDM  she
had a talent for drawing and for  painting and in 1940 she graduated from
secondary school and became a  kindergarten teacher

after finishing training
to be a  secretary in 1942 at the age of 22  Fairchild heard about a job
opening for  our secretary at the government office  of the chancellor of
Germany applied for  it and got the job

that same year Sophie stroll enrolled
in  the University of Munich and later that  year after becoming increasingly
disillusioned with the Nazi regime she  and her brother Hans and several other
students founded the white rose which  was a non-violent underground resistance
group  the members adopted a strategy of  passive resistance against Nazi
policies  and regime  writing and distributing leaflets which  called on the
German people to take  action to stop the Injustice and  genocide happening in
their country

 in 1943 her child is given the  opportunity to transfer to
Hitler's  headquarters and began working directly  for him as one of his
private  secretaries and despite being so close  to the Nazi leader she has
little to no  idea about what the regime is doing

she later said  I was 22 and
I didn't know about  anything about politics it didn't  interest me

on February 18 1943 Sophie and her  brother Hans were arrested by the  Gestapo
while Distributing Flyers at the  Ludwig Maximilian University  in her descents
in court four days later  Sophie said

somebody after all had to make a start
what we wrote and said is also believed  by many others they just don't dare
Express themselves as we did  the court found troll her brother Hans  and their
friend Christoph prose to be  guilty of treason and they were executed  later
that day  so if he was 21 years old

your child remained in Berlin with  Hitler
until the end of the war in 1945  and was responsible for typing Hitler's  last
private political will and  testament on the day before his death  and because
of this she is known as  Hitler's last secretary  after being captured by the
Soviets and  Americans and being interrogated about  her role and the end of
the Nazi regime  she was freed in 1946 and allowed to  live in West Germany
and eventually she died from cancer in  Munich in February 2002 at the age of
81.

 throughout her life she was interviewed  about her experiences during and
after  the war a number of times  and in one of these interviews she said  of
course the horrors of which I heard  in connection of the Nuremberg trials
shocked me greatly  but at that time I could not see any  connection between
these things and my  own past

I was only happy that I had not  personally been
guilty of any of these  things and that had not been aware of  the scale of
these things

one day in Munich their child walked  past the plaque on the wall
in memory of  Sophie Scholl and learned about her for  the first time

she said
I must have often walked past  the commemorative plaque to official  without
noticing it one day I did and I  was terribly shocked when I realized  that she
was executed in 1943 just when  I was beginning my own job with Hitler

trophy
Scholl had originally been a BDM  member herself a year younger than me  and
she saw clearly that she was dealing  with the criminal regime

all of a sudden
I had no excuse anymore  it was no excuse to be young it would  have been
possible to find things out

so why am I telling you this story? I was reminded
of the story of Sophia  and Gertrude the story of two very  similar women one
who confronted  politics head-on and one who ignored it  from a tweet that I
saw by Al swiger


if you don't know Al he's the author of  automate the boring
thing with python  boring stuff with python and and many  other excellent books
on Python and if  you do know Al you know he's also not  someone to shy away
from politics  so what happened is  Al got a direct message on Twitter  saying
hey I followed you I liked your  book and I hope to get more information  from
you but I don't like your politics  I don't like what you're talking about  and
so I'm gonna unfollow you but I  don't mean that in a bad way I just  thought
you wanted to know  and you know Al responded and he said I  get it I want to
live in a world where I  just tweet about python make my little  video games
don't concern myself with  politics but we don't live in that world  and I feel
like I've started seeing this  trend where people really want to  separate Tech
from politics or just  generally put politics in this tidy  little box
somewhere where they don't  have to think about it  and I get it politics isn't
really  particularly fun and lately for some of  us it's been a challenging and
potentially traumatizing part of our  lives  so like ow I also want to live in
a  world where I can just come to you and  talk just about python

 but here's
the thing  python doesn't exist in a world without  politics  python is a
product of our world and the  individuals that created it and of their
individual politics  and if you think that python is a piece  of pure
technology completely devoid of  politics you are absolutely wrong  python is
an incredibly powerful piece  of technology that was built and  maintained for
free by Collective of  volunteers distributed for free to  anyone entirely
without restriction  whatsoever and if that's not political I  don't know what
it is

 and look it's not just python it's it's  everything we don't live in a
world  without politics

and what this means is that all  technology is
inherently political  sometimes attempting to remove politics  is just akin to
that DM asking telling  Ali he was gonna you know stop following  him it's like
putting your head in the  sand pretending that politics just  doesn't affect
you and doesn't exist  kind of like your child Young  but sometimes it's an
active attempt to  suppress legitimate descent like what  happened to Sophie
Scholl  and either way the act of trying to  remove politics is in and of
itself  political  and even inaction is political and even  potentially
dangerous

so  what is the collective good  let's take python as an example
this community exists and is successful  because we made it all of us  Python
and everything related to python  exists and is successful because we  built it
and I think that we all collectively can  agree that it's it's good python is
pretty great it's incredibly useful  it might not be perfect but it's a net
good for the world  and it exists because at millions of  tiny points in its
history people made  the conscious decision to make it good  and keep it good
and make it something  that's good for the world  and the sum of all those
decisions are  more powerful than anyone that chose  otherwise or chose in
action instead

you might not feel personally  responsible for the collective
good of  python and that's okay  you might have never written a line of  python
and maybe this is your first  python conference and to that I say  welcome I'm
so glad you're here  you might not be a maintainer of a  popular package on
Pipi  and to that I say don't worry there's  plenty of stuff on pipei  you're
probably also not a core  developer and that's okay too because  I'm not a core
developer either  but I fundamentally believe that as a  member of this
community and if you're  listening to this I do consider you to  be a member of
this community it is your  responsibility to protect the collective  good
that's that's why python exists some  people put some time and effort into it
sometimes they put more than they got  out of it but usually they did just a
little bit  and if you don't know how to do that  don't worry I'm gonna show
you how

sometimes protecting the collective good  means doing things that are
hard  and I'll give you a small personal  example  I'm one of the people
primarily  responsible for responding to reports of  malware on Pipi  and
dealing with malware on pipei is not  fun there's nothing about it that's fun
it's incredibly time consuming it's  mostly thankless  it's somewhat
demoralizing and it  honestly never ends  and yet I do it anyways  I'm not
saying that I'm trophy Scholl  but my ultimate desire is to make things
collectively better and I think at least  in small part by doing this hard
thing I  have

sometimes protecting the collective good  means not doing things
that are easy  and I'll share another example from my  personal life when I
finish college I  had a job all lined up with the research  lab that I had
worked with when I was in  grad school  and it would have been so easy for me
to  continue to work on that path to keep  going doing the same work working
with  the same people on the same projects  but I spent a lot of time thinking
about  what the total outcome of everything I  did would be if I had done that
and what I decided was that morally it  wasn't okay with me because I couldn't
see how it would be a benefit to the  collective good I thought that I could
do better  and you know more or less restarting my  career right out of school
wasn't easy  but as it turns out I think I made the  right choice and I'm
really glad that I  did

protecting the collective good generally  it just
means just doing something  remember even in action has effects but  usually
those effects are negative  so as python developers as open source  users uh
what can you do

here's my call to action and here's the  thing about my call
to action  I work in software security specifically  I work in open source
software security

do you know the phrase it takes two to  tango  what this
means is that  the only reason my job exists is because  there are people out
there who want to  do harm to open source  to the people that use open source
so most of the things that I think you  should do are going to be related to
open source software security  the good thing is I'm guessing that  almost all
of you are open source  software users so hopefully most of this  is applicable

and there are a couple different ways  that I think about threats and things we
can do for open source software there  are three wildly different levels of
threats to open source software

the first one is by far the most common  try
and steal your monkeys the nft and  cryptocurrency Community is essentially
Rife with people who are trying to rob  you

so when you hear about things like
malware on Pi Pi removing 3 600  malicious libraries it's almost  definitely an
example of this  this includes things like stealing  compute to mine
cryptocurrency  encrypting file systems holding them  Ransom in exchange for
cryptocurrency  Etc  it's usually for financial gain and  these end up being
fairly harmless to  the average user of the Python Community  but they are
still potentially harmful

the second is less common  an attacker wants to do
you specifically  or your organization some harm  and maybe it's financially
motivated as  well but maybe not maybe it's just to  collect a bug Bounty or
maybe it's just  for the lulls

an example of this is this particular  type of
supply chain attack which  directly targeted large corporations

the third is
the what I'll call low  frequency but high impact threat and  these are usually
perpetuated by its  state actors  this is a tax like solarwinds

and I'm
assuming that everyone and their mother  has heard about solarwinds by now but
if  you haven't it was described as the  largest and most sophisticated attack
ever

 and it was called the worst nightmare  Cyber attack

and this is because
it was extremely  sophisticated but also because it  directly attacked the US
government  and all of these types of threats could  really actually affect any
of us  I really want you who make up our  Collective Community to be protected
against all of these everything from  protecting your monkeys to protecting
your government  partly because I care about protecting  the collective good
and partly because  it's my job

you see the solarwinds attack was almost
directly responsible for the creation of  the U.S executive order 14028 on
improving the nation's cyber security  so for anyone that's not based in the
U.S I'm assuming most of you are or for  anyone that is based in the US but
doesn't know how their government works  an executive order is kind of like an
email from your boss that's telling you  what to do  this has the effect of
setting policy  for the entire executive branch and  federal government but
it's also kind of  like placing an order at a restaurant in  the sense that you
kind of say what you  want to happen and then people go off  and try and figure
out what that means  and how to make it happen and maybe that  takes a little
while  so this executive order was published a  little more than a year ago and
we're  still at the everyone is trying to  figure out how to make it happen
stage

and this executive order it has a number  of directives but it
specifically calls  out the software supply chain  and if you think for a
minute that this  is just limited to government entities  remember that the
government uses a lot  of software most governments use a lot  of software
they also use a lot of the same software  that you and I do the same open
source  software  so the terms of this order sort of have  a viral effect of
improving software  security for everyone  and this is generally a good thing
so as a result  a number of organizations including  Google  have stepped up to
make improvements  here in cyber security and in open  source software security
and these improvements are not just for  Google and they're not just for the US
government therefore the entire  ecosystem  and this means that many of my
suggestions are going to be a little  biased because these are the things that
I think are worthwhile improvements and  that my team thinks are worthwhile
improvements  and also remember because they're Tech  they're inherently
political as well

so here's a list of things that I think  you today can do to
protect the  collective good and most of these are  going to seem focused on
your personal  software security or the way that you  consume open source
software  and after taking these steps or adopting  these tools depending on
what it is  it will likely help protect you and your  organization but you
should also  consider that any attack against you  might be part of some bigger
larger  attack against the collective good  and all of these are going to
require  some effort on your part none of it's  for free some more than others
but remember even in action has effects  and usually those are negative

so the
first thing you can do  enable two-factor Authentication  enable it everywhere
but specifically I  want you to enable it on Pi Pi

you might have heard
recently that Pi Pi  was a target of a phishing attack  and in that attack some
users accounts  which were not protected with two-factor  authentication were
compromised  for users with two-factor authentication  enabled especially those
that use  security keys they were unaffected  but additionally pipecat users
may also  be vulnerable to other types of similar  attacks like credential
stuffing due to  password reuse password breaches or  leads credentials  and
all of these are classes of threats  that two-factor authentication
effectively protects against

seriously if you do one thing after this  talk is
over  go and enable to factor authentication  on Pi Pi if you have an account
go to  pike.org 2fa  even if you don't maintain any projects  there if there's
even a slight chance  that you will in the future go and do it  not only will
you protect your current  and future users as well as yourself but  you'll also
save us the Pi Pi team from  having to deal with your potential  future
compromise of your account if you  were ever fished or your password was
stolen or anything like that

as a bonus right now if you're the  maintainer of
a critical project and by  critical project we Define that to be  the top one
percent of projects on Pipi  by download counts we are giving away 4  000
Google Titan security keys for free  to maintainers of critical projects to
help them enable two-factor  authentication with Hardware keys  unfortunately
these aren't available in  every region but generally we want to  make them as
available as possible to  all IPI maintainers with critical  projects

you can
go to pipefi.org security key  giveaway to read more about this and to  check
and see if you're eligible and if  you're able to receive a key  and these will
be there till October 1st  our goal is to try and get all  IPI maintainers of
critical projects to  be using two-factor authentication with  security keys in
the near future

the second thing that you can do is be  aware of known
vulnerabilities  because the reality is humans are humans  bugs are gonna get
written and they will  be discovered  you should be immediately aware of the
presence of known vulnerabilities in  your applications in your environments
your libraries whatever  and you should be able to quickly  remediate quickly
fix the presence of  those vulnerabilities if they exist  so how does this help
Collective good  if your software is vulnerable and an  attacker knows about it
but you don't  know about it  you or your users might become a Target  and this
has potentially far-reaching  effects potentially beyond your own  software for
example if your software is  a dependency for something more widely  used and
it has a vulnerability that  could potentially be used to compromise  the
bigger project that was depending on  you  so there are two things in the
python  community that will help make you aware  of known vulnerabilities  the

first is the python packaging  Authority has created a centralized  ecosystem
specific public repository for  security advisories and the goal here is  to
make it easier to report but more  importantly discover security advisories  so

these exist for most major ecosystems  and the python one was created recently

these use a format called The Open  Source vulnerability format and this is
provided by the open source  vulnerabilities project  um osv also has an API
and they act as a  vendor neutral aggregator and mediator  for vulnerabilities

they kind of look like this here's an  example this is an advisory for Django
of a vulnerability that was introduced  found and fixed  um but you're not
supposed to read these  each of these by hand right the idea  here is that
these are machine readable  and the what the reason we want them to  be machine
readable is because we also  have vulnerability auditing software so

software
that is able to audit and  discover known vulnerabilities isn't  something
that's specifically new  similar software to this has existed  before  what's
actually new here is that these  pools are now community-owned tools and  they
use the advisor databases that we  previously mentioned and they're free

so  in
the last year I helped create and  release a tool called pip audit which is
third party tool and you can run this  locally run it as part of your release
process in your integration tests  wherever you can run it inside of a
container against a requirements.txt  file and what it'll do is it will tell
you if there are any known  vulnerabilities present in the software  that would
exist or does exist there  so this allows you to feel confident  that you're
not about to deploy  something or release something with a  known vulnerability
to be clear it's  never going to find a vulnerability that  nobody knows about
but the goal is that there are  vulnerabilities out there in the  software that
we use that  are present in certain versions and  usually they get fixed and we
should be  able to upgrade to those fixed versions

 so the way you use pip
audit you can run  it against a local environment you could  install this now
and just run on your  machine see what vulnerabilities exist  there  um but you
can also audit a requirements  file you can run it against something  that
you're about to install

and when you run it it tells you if  there is a known
vulnerability it's ID  and what version it's fixed

but it makes  it even easier
than that for you because  you can call it pocket fix and it will
automatically upgrade you to a  non-ulnerable fixed version  this is really
nice I'd love for folks  to try this out and give us feedback

a third thing
that you can do  to protect the collective good but more  importantly protect
yourself is enforce  security policies for your Source  control  so as
developers we're writing code  we're putting it in things like GitHub  gitlab
various Source control mediums  and you know there are  policies and things we
can do to secure  these repositories above and beyond what  the source of
controller repository  provides itself  these will allow you to reduce the
service area for ways in which your  Source repository could be compromised
this is even before you go to distribute  or release software

so the tool I
recommend for this is  All-Star app this is a project of the  open source
software security foundation  and

it's a GitHub application you can go  to
github.com apps  so All-Star is a GitHub app and

it  enforces best practices it
also allows  you to set a policy so you don't have to  adopt all those
practices at once and it  lets you set this policy across an  entire
organization so these could be  things like things requiring Branch  protection
to be enabled preventing  binaries from being checked into Source  control
preventing the existence of  outside collaborators  ensuring that fuzzing is
enabled and  that kind of thing

so when what it does is when it finds an
exception it automatically creates an  issue in the repository so for example
um here's the repository I maintained  and the repository had violated a policy
that was set by the organization and it  created this issue saying there were
outside collaborators that had admin  access  so the org had set this policy
and when  the repo was in violation of the policy  we were immediately made
aware of it  this is pretty nice and again I love  folks to install this and
try it out on  their Source control it works uh right  now with with GitHub and
it works pretty  nice

fourth thing I'd love for everyone to do  is use
security scorecards for their  open source projects

so security support  cards
they this is a project to assess  open source projects for security risks
through a series of automated checks so  you could use it proactively to assess
and make decisions about your own code  base so you can run this uh you know
against your code base but you can also  use it to evaluate other projects and
dependencies  and potentially even work with the  maintainers of those projects
and  dependencies to improve their code bases  that you might want to integrate
against

um the way security scorecards works is  it gives you a score so
here's an  example for a G visor which this is a  Google project  um and
scorecard was run against this  project and it sort of against a couple
different criteria it determined uh sort  of the score how well the project has
aligned with these best practices  um so these are things like whether it's
doing vulnerability or whether it has  any known vulnerabilities whether it has
a license security policy  um it has the fuzzing that kind of thing  things
like pin dependencies for example  here aren't present in their repository  so
it got a core score for that but this  essentially gives you an easy metric to
determine what places your open source  project can be improved but also as a
consumer of Open Source you can use this  to evaluate potentially how secure a
dependency that you're thinking about  adopting is right  um these scores
aren't perfect but  generally a lower score here might be an  indicator of a
project that's not as  actively maintained or not adequately  protected against
uh in Source attacks

but you can see security scorecards at  security
scorecards.dev  um and if you want to adopt this for  your own project they run
in CI with a  GitHub action against your project to  give you a score and you
can put a nice  little badge in your readme as well

the fifth thing I think
everyone can do  and at least be aware of is signing  things with Sig store so
signing  generally helps ensure Integrity as a an  artifact like a software
piece of  software or a file or really anything  move from one place to another
as they  are published as they're redistributed  and so on  so historically
when people say signing  they usually mean using gpg and that  technology has
been around for forever  it's been around for a very long time  you probably
don't use it a lot though  uh and that's for a number of reasons  six store is
a a new project by the  Linux foundation in partnership with the  open source
software security foundation  and across multiple vendors including  Google red
hat and many others  stickster is a a new way to think about  signatures
identities and trust and I I  could do an entire talk on six door and  how it
works along because it's really  novel and it's really interesting  the short
version is that sixthor is  much easier to use than gpg if you've  ever used
gpg before you know that the  user experience is not great  but also six
stories not just about  cryptographic signing  um gpg requires humans
essentially to  not be humans because one of the things  that gpg requires is
for users to  maintain private keys and humans have a  tendency to lose things
no one once said to me GPT would work  really well if you could also go around
and permanently staple everyone's  private key to their foreheads but you
can't do that  but with six store it's much easier to  establish this trust in
individual  identities and there's no need to  maintain or keep hold of private
Keys  which is the common problem with gbt  fixer also integrates really well
with  existing Cloud platforms and cidc CI  systems  um via the oauth protocol
which it uses  under the hood to establish identity and  Trust  you can read
more about six door at six  door.dev but there's more  to make Six Tour really
easy to use for  python users we have built a native  python client for signing
and verifying  signatures this is essentially a six  door client entirely built
in Python  that you can pip install  and this includes really nice features
including detecting ambient credentials  and what this means is if you try to
sign something in an environment that  supports the appropriate identity it
will use that automatically and what  this means is if you sign an environment
like GitHub actions some Google Cloud  virtual machines that kind of thing it
will automatically adopt that identity  and sign with it without you actually
needing to think about it and the  potential for signing things with these
sort of micro identities the identity of  the system that built the software is
really powerful once once you unlock  them  Pixar is not quite feature complete
yet  you can try and use it it will work fine  but we are working towards this
1.0  release eventually  and I'm really super excited I want to  give everyone
a sneak peek of something  that I don't think has really been  announced yet
um  so we're going to be signing the the C  python releases with six tour going
forward the upcoming see python 3.11  release uh will be signed by the release
managers with six store in addition to  the existing gpg signatures I've been
working on this for a super long time  and it's really amazing to see this
actually coming together we'll be  signing the release candidate that  happens
on Monday and then in October  when the final release is made that will  be
signed as well  there's a fully detailed explanation of  how users will verify
six for signatures  with C python uh using the six star  library that is on
pipei you can go to  python.org download slash six store  um to read that and
stay tuned for some  more details there  back to the collective good the sixth
thing that I think everyone can do and  probably something that you're already
doing  is just be a user this means you this  means try this stuff out and then
tell  us how it works for you share your  experience tell us what it's like to
be  a user  possibly you know even become a  contributor if you want if this is
all  open source stuff  um generally just participate in the  ecosystem  and
the seventh and last thing I want to  ask you all to do just generally and
broadly is take open source security  seriously  it might take some investment
of your  time and energy I don't think any of the  things I described come for
free we try  to make them as easy as possible  um but yeah but they will take
some  small investment but I promise you that  it's worth it to protect the
collective  good  remember this is why something like  python exists some
people put a little  time and effort into it sometimes it's  more than they got
out of it but usually  it's not to make it better  this is the end of my talk
but before I  end I want to say thank you to a few  folks  um first I want to
say thanks to you all  for listening to my talk  um thank you to the pycon APAC
organizers for inviting me to speak and  also for putting in a ton of work into
what I'm sure will be a really amazing  conference  um thank you to the pycon
Taiwan  organizers as well for acting as host  for the event this year uh this
is not  my first uh time I've spoken at your  conferences so I was at pycon JP
in  2019.  um do you know python Japan  and I also spoke at ficon Taiwan in
2019  and this remains to be the only  conference I've ever been at with a
string ensemble both of these are among  my favorite python conferences and
communities that I've seen and  experienced  you here's my wish  you all have
amazing countries culture  and community  there is collective good there  I
want to say that my wish is that I  could be there in person this year  but I
really admire that your primary  concern is keeping everyone safe thank  you
for that  if the pandemic has taught me anything  it's that we we really don't
know what  the future will bring but keeping each  other safe  keeping our
community together and  protecting the collective good is of the  utmost
importance  so instead my wish is that we can all be  together again at some
point in the  future  and I wish you all the best in  everything necessary to
make that wish a  reality  thank you  thank you Dustin for your your
interesting share and here now we are in  the QA session so I'm going to ask
questions from our audience  and the first question is from type  um TS I
follow the Pi Pi patient news we  appreciate you and you and the team ever  for
handling this and how many average  hours did you actually live during the
event  how many did I sleep is that the  question yeah I think yeah it I think
that this project will really consume a  lot of your time yeah yeah that's true
so first uh thanks for thanking me it's  it's uh it's great to hear that
feedback  that it's appreciated the work that we  do  um and yeah thanks for
also  understanding that yeah it's an  investment in time so  um the phishing
attack itself probably  you know it didn't cost me sleep  um we kind of woke up
to it and had it  under control pretty quickly and were  able to determine what
had happened and  were able to Monitor and keep an eye on  some stuff like I
said some users were  compromised and as a result of that some  releases of
legitimate projects were  made with illegitimate releases with  with malware
included in them so we were  able to discover that and and take those  down and
that to take some time honestly  the thing that took the most time in  those
kinds of responses and the thing  we're still kind of addressing is is the
community feedback making sure that  everyone's aware ensure that we have
adequate communication with community  that people know what's happening
because and sort of just responding you  know we sort of have this incredible
flood of people that are telling us that  this is happening and it's great to
get  that many reports and have people really  care about IPI and the community
and  then want to you know look out but and  we also have to say okay yes yeah
we got  it we heard about it we're working on it  um so yeah uh you know all of
these  things you know the the maintenance of  IPI is shared by a couple folks
and it's  generally a lot of work and and none of  us are really ever full-time
working on  it but sometimes some days it's uh we  drop everything else and
that's what we  do and this is one of those days  yeah thanks Ty for that
question  yeah thank you your efforts out of this  project  and the next
question from Jim Wei is  um what are the most common malware and  threads on
pie pie earlier in the  malware detection mechanisms now if  people want to
help contribute pressure  they start  this is a really great question uh so
yeah what's the most common thing are  the detection mechanisms and and how can
people help so  uh what happens the most is sort of that  that number one you
know threat that I  was talking about which is sort of not  super harmful to
those Pi Pi users and  that's  um what I'll call exfiltration but  generally
this is someone trying to gain  access to some credentials that might  happen
and and usually these credentials  are uh for some reason Discord tokens uh
there's a lot of malware on pipei trying  to compromise Discord users and and
the  reason I do kind of know the reason for  this the reason is because a lot
of  cryptocurrency and nft projects that use  Discord and so if you are able to
compromise you know a potential like an  administrator in one of those
communities  um you could potentially like convince  other people to give you
something that  you think is valuable so  um that is like you know we remove a
lot  of malware from Pipi  that is probably the most common thing  is like
people trying to compromise  Discord users  um I I don't think that that those
attacks are very successful like they  sort of hinge on the fact that someone
tricks someone else into accidentally  pip installing something that does
something bad and you know when we look  at download accounts for these they're
not very significant so  um but those aren't I guess those aren't  the high
impact events that we really  care about but they do take up a fair  amount of
our time  um the way that we find out about these  is that Pipi itself and
there's just a  blog post published about this recently  actually but IPA
itself we don't we  don't scan anything that's published to  Pipi we basically
allow anyone to upload  whatever they want as long as it sort of  conforms to
the file formats that we  require  uh so that means that like it's it's
totally possible to write something  malicious and publish it to Pipi and No
One's Gonna Stop you  um what happens though is that once you  publish it there
is a huge community of  security researchers  um some of them working for
non-profits  like I mentioned the open source  software security Foundation
they have a  team that does  um you know package analysis and they  send us
reports but some are like  for-profit companies that do security uh
investigations malware detection that  kind of thing  um and they all are great
contributors  to pipeline that they tell us as soon as  they find something
that's malware uh  and and they report it to us immediately  so  um and it's
great because they also sort  of complement each other some of them  are really
good at detecting certain  things and some of them are better at  detecting
others and  um you know there's some overlap as well  but usually they do a
really good job of  of finding and um  and telling us when there's malware and
you know one of the problems with  dealing with those kind of things is the
potential for a false positive right we  we never want to take down a project
that is legitimate so it's really  important to us to  um always have a human
or if you and  make sure that something is actually  worth taking down that's
malicious  before it happens because we we don't  want to you know mess up
someone's  actual project and and potentially all  the users of that project as
well  um so yeah that's that's sort of how we  find these discoveries and then
the last  question I really love which is how you  can help  um so one of the
things that is helpful  is you know if you find something on IPI  that you
think is  seems a little weird uh let us know so  if you go to pipi.org
security we have a  whole list of guidelines for how you can  report these
things to us and it's  essentially you sent us an email and we  follow up on
um that's super helpful that's how all  these security researchers let us know
about malware and let us respond to it  effectively  um there are other things
that you can  help as well right so this this sort of  like process of parsing
through all  these reports and taking down things  that are malicious  um this
is the thing that is  something that's hard to ask of  volunteers and also
something that is  hard to give people a responsibility to  do because it's
essentially giving you  the ability to delete anything from  pipeline so unless
you know I as a  maintainer have a lot of trust in you  I'm not going to
necessarily let you do  that so the way that you can actually  help here is if
you want to start  building trust in yourself as a  moderator as a contributor
to IPA start  contributing just you know in the  repository of source stuff and
do it  consistently and eventually you know  that helps us because it takes
that  stuff off our plate and we can focus on  higher profile things but
eventually  over time also we can trust you more and  entrust you with more and
more  um you know responsibility so if you're  interested in getting involved
in  pipette or any other projects mentioned  for that matter  um please reach
out to me I would very  much like to help you introduce you to  one of the
maintainers or help you  figure out how to become a contributor  thanks for the
question  okay  and the next question from another  anonymous audience he asked
that alert  plans to enable additional shipping  options for the hardware keys
yeah so I'm really sorry to say that it  doesn't seem like we're going to be
able  to distribute those keys to other  countries and I'll explain why so
right  now I think it's limited to 12 different  countries and they're probably
the ones  that you can imagine they're available  in  um the reason for this is
because we you  know the python software foundation and  the pipei team we're
limited by the  places where Google sells those keys  because the way that the
giveaway works  is we give you a discount code and you  go and redeem it and
then those keys are  shipped directly to you we never see  them or touch them
or anything like that  um but unfortunately that means that  only the countries
that Google has you  know gotten clearance to sell these keys  are the ones
that are available and I  know I I am not a lawyer I don't work in  like import
export but  um there are some like legal reasons why  we can only you know
Google can only  distribute those keys in certain  countries we did try to talk
to some  other key manufacturers who are able to  distribute in other countries
there are  security Keys  um they weren't able to you know sort of  provide the
same contribution that we  needed in order to give their keys away  instead of
the Titan Keys we would  really love to do that but it just  didn't happen so
it's something that we  still want to do and maybe in the future  if uh any of
these other manufacturers  want to distribute keys  reach out let me know we'll
try and  figure something out but yeah for now  unfortunately those are only
available  in those those regions where they're at  right now  okay and uh next
question I think next  is another question you just said uh  snake people the
best can wait for  lottery days  and I think me too so yeah what was that  the
C python release uh yeah I think  yeah yeah yeah I mean uh  see python 3.11 is
going to be really  exciting for like lots and lots of  reasons  um I've seen
folks working very hard on  lately  um I don't I don't work on core python
stuff so you know I'm just a regular  python user basically  um but it is it's
been exciting for me  to participate in sort of like figuring  out the python
release story and ways  that we can improve it and like the  first thing we're
doing here is is  signing it with six tour  um but there'll be more stuff as
well  that we do to make you know a lot more  assurances about the security of
C  python in the future it's not something  that you know is really a problem
right  now I think people aren't really  thinking about it and see python
hasn't  been compromised but there's always  potential there and it's good to
know  that like we have safeguards in place to  keep that very important piece
of  software uh secure  yeah  and the next question and it's also  asked by
Thai and ex will sponsor pipei  we are GitHub or something help the  pipeline
to as an individual  uh I love that ties asking all these  questions thank you
Ty that was the  question like is it possible to sponsor  pipia  as an
individual  I think so  okay yeah so  um  so like on GitHub uh pipei actually
we  recently moved to a separate  organization a Pipi organization but if  you
go to github.com  p-u-y-p-a the python package Authority  um you can sponsor
the python package  Authority right now on GitHub we we're  on GitHub sponsors
um you can do that another way that you  can fund  um python packaging
specifically is  through tidelifts so if your  organization  um you know wants
to become a title of  subscriber and you use some of these  packages some of
that Revenue will get  redirected into the maintainers and the  python
packaging Authority for those  projects and then the other thing and  like
honestly this is the way you know  we we do always appreciate individual
donations but a lot of the things that  need done to Pi Pi the work that needs
done is big and time consuming and  requires like a focused full-time effort
so we've had a lot of success in the  past about  um finding grants or finding
organizations that want to sponsor or  pay for very specific work specific
features specific improvements that kind  of thing we've done this a bunch of
times and in fact like the fact that IPI  itself supports two-factor
authentication that was an example of  someone uh we we found a funder they
funded the project we hired contractors  that came they built it IPA now has
that  feature it was a great success  um so I'd say like you know we always
appreciate individual contributions but  um the way that we really can affect
change with pipei is trying to find ways  to fund these big projects find ways
to  get organizations to sponsor the python  software Foundation sponsor Pike
individually all those kind of things  but yeah that's a great question  okay
and and and a quick question from  me  um I think I have a question then have
you have any experience when uh you  build your python project by some uh
vulnerable uh packages that makes your  project being attacked or  or missed
some problem when yeah having  those vulnerable python packages and how  would
you deal with it  yeah I I so you know  well this is the problem last time I
was  on The Talk python podcast and I told  you listen to podcasts I the host
is  Michael Kennedy and I was on it a couple  weeks ago and I told Michael I
was  talking about fishing and I said I've  never seen a fishing attack and
then uh  weeks later there was a phishing attack  so I don't want to say that
this has  never happened like I'm not aware of it  it might have happened uh
that like  build tooling or you know core python  was compromised in some way
and it's  it's reasonable to think that it might  have happened because  um you
know when I talked about the  solarwinds attack before the the way  that that
piece of software was  compromised was not  um you know someone committing
malicious  source code not someone accidentally  writing a bug  um it wasn't
like  someone middlemanning them or anything  like that what happened was some
of the  the build tooling and sort of release  tooling software that they used
was was  in effect compromised and they were able  to replace uh what was being
distributed  with something else so  um it is like it's a valid threat and
there are  um I didn't go into long detail about  salsa but salsa is a
framework that you  know a lot of organizations are working  with and working
right now including  Google and it's a way to sort of  describe how secure this
build pipeline  is and right now like essentially  everyone's at Salsa zero
right we're  kind of just  installing whatever and building  whatever and sort
of hoping and trusting  that it works but there's extra stuff  that we can do
to have more confidence  in the Integrity of the software we're  building  um
these things are hard to detect and  these things are also uh you know
potentially pretty bad so I think like  we sort of determined the best possible
solution here is to just uh you know  increase the controls and security of
the build process and ensure that when  software is being built it's not being
compromised but  um yeah I don't I'm not sure if that  answers your question
but yeah  yeah yeah  and maybe the next question I want to  ask is is there a
very Unforgettable  project or a story when you are  contributing in this uh
project yeah can  you share it share with us more about  that  yeah but I'll
say that like one of the I  I mentioned a lot of like hard stuff  that I do as
a pipeline moderator and  administrator but there are some fun  things as well
and  um one of the fun things is just sort of  seeing all the the people
publish really  funny stuff on pipei Sometimes some  really interesting
projects uh some  really fun stuff  um I don't I don't have something  specific
that comes to mind but uh yeah  I mean all the time I'll be doing just  some
like very routine thing and come  across somebody's project that you know
maybe is not super used but is super  interesting has a really funny
description uh and I really love those  are like little gems and we I always we
always share those uh in our you know  chat Channel  um when we find them
because they're  always really fun to see  foreign  so I think it's about in
the end of this  session and thank you Dustin for your  informative and
interesting sharing  and the audience you if the audience  which will who want
to  discuss or interact with testing you can  go to the space The Gather town
space a  the main uh the central part of the  space a  and if you don't know
where to join you  can go to a chat box and search  me  Java and you can you
can follow me and  you can see all the people here  yeah yeah thanks thanks
again for having  me it's great to be here and like I said  I hope to be with
you all again soon  thank you Dusty thank you
